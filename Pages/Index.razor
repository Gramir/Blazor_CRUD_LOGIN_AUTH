@page "/"
@inject Tarea6.Servicios.Tesoroervicio servicio
@inject Tarea6.Servicios.UsuarioServicio servicios
@inject Blazored.SessionStorage.ISessionStorageService sessionStorage
@inject IJSRuntime iJSRuntime
@attribute [Authorize]

<h2 style="background-color:@color;">Hola, @nombr</h2>

<div class="row bg-light">
    <table class="table table-bordered">
        <thead class="thead-dark">
            <tr>
                <th>Nombre</th>
                <th>Descripcion</th>
                <th>Fecha</th>
                <th>Lugar</th>
                <th>Latitud</th>
                <th>Longitud</th>
                <th>Valor</th>
                <th>Peso</th>
                <th>URL de referencia</th>
                <th></th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @if (Tesoros.Where(u => u.Usuario == Id).Any())
            {
                @foreach (var Tesoro in Tesoros.Where(s=> s.Usuario == Id))
                {
                    <tr>
                        <td>@Tesoro.Nombre</td>
                        <td>@Tesoro.Descripcion</td>
                        <td>@Tesoro.Fecha</td>
                        <td>@Tesoro.Lugar</td>
                        <td>@Tesoro.Lat</td>
                        <td>@Tesoro.Long</td>
                        <td>@Tesoro.Valor</td>
                        <td>@Tesoro.Peso</td>
                        <td>@Tesoro.URL</td>
                        <td><button class="btn btn-dark" @onclick="(() => SetTesoroUpdate(Tesoro))">Editar</button></td>
                        <td><button class="btn btn-danger" @onclick="(() => BorrarTesoro(Tesoro))">Borrar</button></td>
                    </tr>
                }

            }
            else
            {
                <tr><td colspan="6"><strong>No se han encontrado Tesoros</strong></td></tr>
            }
        </tbody>
    </table>
</div>

<div class="row m-5">
    <div class="col-5 bg-light m-2 justify-content-start">
        <div class="p-3 mb-3 bg-primary text-white text-center">Agregar nuevo Tesoro</div>
        <EditForm Model="@NuevoTeso">
            <div class="form-group">
                <label>Nombre</label>
                <input type="text" class="form-control" @bind-value="@NuevoTeso.Nombre" />
            </div>
            <div class="form-group">
                <label>Descripcion</label>
                <input type="text" class="form-control" @bind="@NuevoTeso.Descripcion" />
            </div>
            <div class="form-group">
                <label>Fecha</label>
                <input type="text" class="form-control" @bind="@NuevoTeso.Fecha" />
            </div>
            <div class="form-group">
                <label>Lugar</label>
                <input type="text" class="form-control" @bind="@NuevoTeso.Lugar" />
            </div>
            <div class="form-group">
                <label>Latitud</label>
                <input type="text" class="form-control" @bind="@NuevoTeso.Lat" />
            </div>
            <div class="form-group">
                <label>Longitud</label>
                <input type="text" class="form-control" @bind="@NuevoTeso.Long" />
            </div>
            <div class="form-group">
                <label>Valor</label>
                <input type="text" class="form-control" @bind="@NuevoTeso.Valor" />
            </div>
            <div class="form-group">
                <label>Peso</label>
                <input type="text" class="form-control" @bind="@NuevoTeso.Peso" />
            </div>
            <div class="form-group">
                <label>URL</label>
                <input type="text" class="form-control" @bind="@NuevoTeso.URL" />
            </div>
            <div class="text-center p-3 mb-3">
                <button class="btn btn-info" @onclick="AgregarTesoro"> Agregar Tesoro</button>
            </div>
        </EditForm>
    </div>



    <div class="col-5 bg-light m-2 justify-content-end">
        <div class="p-3 mb-3 bg-primary text-white text-center">Editar Tesoro</div>
        <EditForm Model="@EditarTeso">
            <div class="form-group">
                <label>Nombre</label>
                <input type="text" class="form-control" @bind-value="@EditarTeso.Nombre" />
            </div>
            <div class="form-group">
                <label>Descripcion</label>
                <input type="text" class="form-control" @bind="@EditarTeso.Descripcion" />
            </div>
            <div class="form-group">
                <label>Fecha</label>
                <input type="text" class="form-control" @bind="@EditarTeso.Fecha" />
            </div>
            <div class="form-group">
                <label>Lugar</label>
                <input type="text" class="form-control" @bind="@EditarTeso.Lugar" />
            </div>
            <div class="form-group">
                <label>Latitud</label>
                <input type="text" class="form-control" @bind="@EditarTeso.Lat" />
            </div>
            <div class="form-group">
                <label>Longitud</label>
                <input type="text" class="form-control" @bind="@EditarTeso.Long" />
            </div>
            <div class="form-group">
                <label>Valor</label>
                <input type="text" class="form-control" @bind="@EditarTeso.Valor" />
            </div>
            <div class="form-group">
                <label>Peso</label>
                <input type="text" class="form-control" @bind="@EditarTeso.Peso" />
            </div>
            <div class="form-group">
                <label>URL</label>
                <input type="text" class="form-control" @bind="@EditarTeso.URL" />
            </div>
            <div class="text-center p-3 mb-3">
                <button class="btn btn-info" @onclick="EditarTesoro"> Actualizar Tesoro</button>
            </div>
        </EditForm>
    </div>
</div>






@code {

    List<Tarea6.Models.Tesoro> Tesoros = new List<Tarea6.Models.Tesoro>();
    List<Tarea6.Models.Usuario> Usuarios = new List<Tarea6.Models.Usuario>();
    private Blazored.SessionStorage.ISessionStorageService _sessionStorage;
    string corr,color, nombr;
    int Id;

    protected override async Task OnInitializedAsync()
    {
        await RefrescarTesoro();
        _sessionStorage = sessionStorage;
        Usuarios = await servicios.GetUsuariosAsync();

        await Datos();
    }

    private async Task RefrescarTesoro()
    {
        Tesoros = await servicio.GetTesoroAsync();

    }

    private async Task Datos()
    {
        corr = await sessionStorage.GetItemAsync<string>("correo");
        var usu = Usuarios.FirstOrDefault(u => u.Correo.Equals(corr));
        if (usu == null)
        {
            await iJSRuntime.InvokeVoidAsync("Reload");
        }
        else
        {
            Id = usu.Id;
            color = usu.Color;
            nombr = usu.Nombre;
        }

    }

    public Tarea6.Models.Tesoro NuevoTeso { get; set; } = new Tarea6.Models.Tesoro();

    private async Task AgregarTesoro()
    {
        NuevoTeso.Usuario = Id;

        if (NuevoTeso.URL == null)
        {
            NuevoTeso.URL = "<none>";
        }

        await servicio.AgregarTesoro(NuevoTeso);

        NuevoTeso = new Tarea6.Models.Tesoro();

        await RefrescarTesoro();
    }

    Tarea6.Models.Tesoro EditarTeso = new Tarea6.Models.Tesoro();
    private void SetTesoroUpdate(Tarea6.Models.Tesoro Tesoro)
    {
        EditarTeso = Tesoro;

    }

    private async Task EditarTesoro()
    {
        if (EditarTeso.URL == null)
        {
            EditarTeso.URL = "<none>";
        }

        await servicio.EditarTesoro(EditarTeso);
        EditarTeso = new Tarea6.Models.Tesoro();
        await RefrescarTesoro();
    }

    private async Task BorrarTesoro(Tarea6.Models.Tesoro Tesoro)
    {

        await servicio.BorrarTesoro(Tesoro);

        await RefrescarTesoro();
    }
}
